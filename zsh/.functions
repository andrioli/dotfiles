bold=$(tput bold)
normal=$(tput sgr0)
red=$(tput setaf 1)

function git-summary() {
  echo "${bold}Branches:${normal}"
  git --no-pager branch

  output=`script -q /dev/null git remote -v`
  if [[ $output ]]; then
    echo "${bold}Remotes:${normal}"
    echo $output
  fi

  output=`script -q /dev/null git status -s --ignored`
  if [[ $output ]]; then
    echo "${bold}Status:${normal}"
    echo $output
  fi

  output=`script -q /dev/null git --no-pager stash list`
  if [[ $output ]]; then
    echo "${bold}Stash:${normal}"
    echo $output
  fi
}

function git-cleanup() {
  # Stash any changes
  git stash

  # Pull and prune origin
  if git remote | grep -q '^origin$'; then
    # Get origin default branch
    defaultBranch=`git remote show origin | awk '/HEAD branch/ {print $NF}'`

    # Checkout default branch
    git checkout $defaultBranch

    git pull
    git remote prune origin
  fi

  # Pull and prune upstream
  if git remote | grep -q '^upstream$'; then
    git fetch upstream
    git remote prune upstream
  fi

  output=`git --no-pager stash list`
  if [[ ! $output ]]; then
    git reflog expire --all --expire=all --expire-unreachable=all
    git gc --aggressive --prune=now
  else
    echo "${red}Skip cleanup to avoid lost stashed changes${normal}"
  fi
}

function docker-update() {
  for i in `docker-images`; do
    docker pull $i
  done
}

function remove-from-path() {
  export PATH=$(echo $PATH | sed -E -e "s;:$1;;" -e "s;$1:?;;")
}

function setjdk() {
  if [ $# -ne 0 ]; then
    remove-from-path '/System/Library/Frameworks/JavaVM.framework/Home/bin'
    if [ -n "${JAVA_HOME+x}" ]; then
      remove-from-path $JAVA_HOME/bin
    fi
    export JAVA_HOME=`/usr/libexec/java_home -v $@`
    export PATH=$JAVA_HOME/bin:$PATH
  fi
}
